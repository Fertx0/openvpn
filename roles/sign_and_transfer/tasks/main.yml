---
- name: Find request files in /tmp
  ansible.builtin.find:
    paths: /tmp
    patterns: "*.req"
  register: req_files

- name: Debug found request files
  ansible.builtin.debug:
    var: req_files.files

- name: Remove existing request file if present
  ansible.builtin.file:
    path: "{{ ca_easyrsa_dir }}/pki/reqs/{{ item.path | basename }}"
    state: absent
  with_items: "{{ req_files.files }}"
  become: true

- name: Remove existing certificate if present
  ansible.builtin.file:
    path: "{{ ca_easyrsa_dir }}/pki/issued/{{ item.path | basename | regex_replace('\\.req$', '') }}.crt"
    state: absent
  with_items: "{{ req_files.files }}"
  become: true

- name: Import req files
  ansible.builtin.command: "{{ ca_easyrsa_dir }}/easyrsa import-req {{ item.path }} {{ item.path | basename | regex_replace('\\.req$', '') }}"
  args:
    chdir: "{{ ca_easyrsa_dir }}"
  with_items: "{{ req_files.files }}"
  changed_when: false

- name: Sign the request
  ansible.builtin.expect:
    command: "{{ ca_easyrsa_dir }}/easyrsa sign-req client {{ item.path | basename | regex_replace('\\.req$', '') }}"
    responses:
      "Confirm requested details.*": "yes"
  args:
    chdir: "{{ ca_easyrsa_dir }}"
  with_items: "{{ req_files.files }}"

- name: Copy signed cert to OpenVPN server using SCP
  ansible.builtin.command: "scp {{ ca_issued_cert }}/{{ item.path | basename | regex_replace('\\.req$', '') }}.crt {{ openvpn_server_user }}@{{ openvpn_server_host }}:/tmp/"
  with_items: "{{ req_files.files }}"
  changed_when: false

- name: Remove temporary req file
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ req_files.files }}"
